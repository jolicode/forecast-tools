# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Controller\Organization\SettingsController:
        arguments:
            $slackClientId: '%env(SLACK_CLIENT_ID)%'
            $slackClientSecret: '%env(SLACK_CLIENT_SECRET)%'

    App\Controller\Organization\InvoicingController:
        arguments:
            $invoicingStateMachine: '@state_machine.invoicing'

    Http\Client\HttpClient:
        alias: Http\Client\Curl\Client

    Http\Client\Curl\Client: ~

    Http\Message\MessageFactory:
        alias: Nyholm\Psr7\Factory\HttplugFactory

    Nyholm\Psr7\Factory\HttplugFactory: ~

    app.harvest_redis_provider:
        class: \Redis
        factory: ['Symfony\Component\Cache\Adapter\RedisAdapter', 'createConnection']
        arguments:
            - '%env(resolve:REDIS_URL)%'
            - { retry_interval: 2, timeout: 10 }

    App\Client\ForecastClient:
        arguments:
            $pool: '@forecast_pool'

    App\Client\HarvestClient:
        arguments:
            $pool: '@harvest_pool'
